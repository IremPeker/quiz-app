{"version":3,"sources":["assets/game.png","assets/celebrate.webp","assets/try-again.webp","assets/fail.webp","utils/dataUtils.js","utils/stringUtils.js","components/App.jsx","utils/apiUtils.js","components/HomeContainer.jsx","utils/arrayUtils.js","components/Score.jsx","components/reusables/GoBackHome.jsx","components/EndGame.jsx","components/GameInformation.jsx","components/PlayContainer.jsx","components/ErrorContainer.jsx","serviceWorker.js","index.js"],"names":["module","exports","decodeEntities","str","DOMParser","parseFromString","documentElement","textContent","App","allQuestions","setAllQuestions","useState","score","setScore","correctAnswers","setCorrectAnswers","wrongAnswers","setWrongAnswers","error","setError","category","setCategory","difficulty","setDifficulty","useEffect","length","categoryNumber","Math","floor","random","getRandomDifficulty","difficulties","async","url","response","fetch","ok","Error","json","console","fetchData","then","data","results","decodedCategory","catch","React","createElement","Fragment","SnackbarProvider","autoHideDuration","Outlet","context","HomeContainer","id","className","src","game","alt","Link","to","shuffleAnswers","correctAnswer","incorrectAnswers","randomIndex","arr","slice","concat","Score","useOutletContext","data-testid","GoBackHome","EndGame","_ref","numberOfQuestions","celebrate","tryAgain","GameInformation","PlayContainer","enqueueSnackbar","useSnackbar","isLoading","setIsLoading","currentOptions","setCurrentOptions","setCorrectAnswer","currentQuestionIndex","setCurrentQuestionIndex","currentQuestion","setCurrentQuestion","numberOfAnsweredQuestions","setNumberOfAnsweredQuestions","setNumberOfQuestions","selectedOption","setSelectedOption","endGame","setEndGame","showButton","setShowButton","question","incorrect_answers","correct_answer","shuffledAnswers","map","answer","setTimeout","optionItem","option","index","decodedOption","key","onClick","variant","handleOptionClick","disabled","PulseLoader","color","size","prevIndex","ErrorContainer","fail","Boolean","window","location","hostname","match","router","createBrowserRouter","path","element","errorElement","children","basename","future","v7_startTransition","v7_relativeSplatPath","v7_fetcherPersist","v7_normalizeFormMethod","v7_partialHydration","v7_skipActionErrorRevalidation","ReactDOM","createRoot","document","getElementById","render","StrictMode","RouterProvider","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.04f78034.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/game.9a0db46e.png\";","module.exports = __webpack_public_path__ + \"static/media/celebrate.4ccc92bf.webp\";","module.exports = __webpack_public_path__ + \"static/media/try-again.73380154.webp\";","module.exports = __webpack_public_path__ + \"static/media/fail.e3c65c50.webp\";","export const fetchData = async (category, difficulty) => {\n  const url = `https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${difficulty}&type=multiple`;\n\n  try {\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error during fetch:\", error);\n    return null;\n  }\n};\n","export const decodeEntities = (str) => {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(str, 'text/html');\n  return doc.documentElement.textContent;\n}","import React, { useEffect, useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { fetchData } from \"../utils/dataUtils\";\nimport { getRandomCategory, getRandomDifficulty } from \"../utils/apiUtils\";\nimport { decodeEntities } from \"../utils/stringUtils\";\nimport { SnackbarProvider } from \"notistack\";\nimport \"../styles/App.scss\";\n\nconst App = () => {\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [wrongAnswers, setWrongAnswers] = useState(0);\n  const [error, setError] = useState(false);\n  const [category, setCategory] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(\"\");\n\n  useEffect(() => {\n    if (!allQuestions.length && !error) {\n      const categoryNumber = getRandomCategory();\n      const difficulty = getRandomDifficulty();\n      setDifficulty(difficulty);\n      fetchData(categoryNumber, difficulty)\n        .then((data) => {\n          setAllQuestions(data.results);\n          const decodedCategory = decodeEntities(data.results[0].category);\n          setCategory(decodedCategory);\n        })\n        .catch((error) => {\n          setError(true);\n        });\n    }\n  }, []);\n\n  return (\n    <>\n      <SnackbarProvider autoHideDuration={2000}>\n        <Outlet\n          context={{\n            allQuestions,\n            category,\n            difficulty,\n            score,\n            setScore,\n            correctAnswers,\n            setCorrectAnswers,\n            wrongAnswers,\n            setWrongAnswers,\n            error,\n          }}\n        />\n      </SnackbarProvider>\n    </>\n  );\n};\n\nexport default App;\n","export const getRandomCategory = () => {\n  const min = 9;\n  const max = 32;\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getRandomDifficulty = () => {\n  const difficulties = [\"easy\", \"medium\", \"hard\"];\n  return difficulties[Math.floor(Math.random() * difficulties.length)];\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport game from \"../assets/game.png\";\n\nconst HomeContainer = () => {\n  return (\n    <div id=\"home\">\n      <div className=\"home-section\">\n        <h1>Quiz Game</h1>\n        <div className=\"instructions\">\n          <p className=\"title\">\n            Each game has 10 questions.\n            <br /> The category of question can vary from General Knowledge to\n            Films, Musics and even Anime Charachters.\n            <br /> The difficulty can be easy, medium or hard.\n            <br /> Each question has 4 options. The questions look like this:{\" \"}\n          </p>\n          <img\n            src={game}\n            className=\"game-screenshot\"\n            alt=\"example screenshot\"></img>\n          <p className=\"title\">\n            Take your time! There is no time pressure :)\n            <br />\n            Click on \"Start Game\" and Enjoy!\n          </p>\n        </div>\n        <div className=\"play-button-container\">\n          <Link to=\"/play\" className=\"play-button\">\n            Start Game\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomeContainer;\n","export const getRandomIndex = (arr) => {\n  return Math.floor(Math.random() * arr.length + 1);\n};\n\nexport const shuffleAnswers = (correctAnswer, incorrectAnswers) => {\n  const randomIndex = getRandomIndex(incorrectAnswers);\n  return incorrectAnswers\n    .slice(0, randomIndex)\n    .concat(correctAnswer, incorrectAnswers.slice(randomIndex));\n};\n","import React from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\n\nconst Score = () => {\n  const { correctAnswers, wrongAnswers } = useOutletContext();\n  return (\n    <div data-testid=\"scoreContainer\" className=\"score-container\">\n      <div data-testid=\"scoreCorrect\" className=\"number-wrapper\">\n        <p className=\"title\">Correct Answers:</p>\n        <p className=\"score-correct-number\">{correctAnswers}</p>\n      </div>\n      <div data-testid=\"scoreWrong\" className=\"number-wrapper\">\n        <p className=\"title\">Wrong Answers:</p>\n        <p className=\"score-wrong-number\">{wrongAnswers}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Score;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst GoBackHome = () => {\n  return (\n    <div className=\"back-home-button-container\">\n      <Link to=\"/\" className=\"back-home-button\">\n        Home Page\n      </Link>\n    </div>\n  );\n};\n\nexport default GoBackHome;\n","import React from \"react\";\nimport GoBackHome from \"./reusables/GoBackHome\";\nimport celebrate from \"../assets/celebrate.webp\";\nimport tryAgain from \"../assets/try-again.webp\";\n\nconst EndGame = ({\n  score,\n  correctAnswers,\n  wrongAnswers,\n  numberOfQuestions,\n}) => {\n  return (\n    <div id=\"end-game\">\n      <div className=\"endGame-section\">\n        <h1>Quiz is finished</h1>\n        <p className=\"title\">\n          Your score is{\" \"}\n          <span className={score >= 6 ? \"green\" : \"red\"}>{score}</span> out of{\" \"}\n          {numberOfQuestions}\n          <br /> You have answered {correctAnswers} questions correctly and\n          <br /> {wrongAnswers} questions wrong\n        </p>\n        {score >= 6 ? (\n          <div data-testid=\"congrats\" className=\"congrats\">\n            <h2>CONGRATULATIONS! You did it!</h2>\n            <img\n              src={celebrate}\n              alt=\"Celebrate Giphy\"\n              className=\"celebrate-giphy\"\n            />\n          </div>\n        ) : (\n          <div data-testid=\"tryAgain\" className=\"try-again\">\n            <h2>Next time you will do better!</h2>\n            <img\n              src={tryAgain}\n              alt=\"Try Again Giphy\"\n              className=\"try-again-giphy\"\n            />\n          </div>\n        )}\n        <GoBackHome />\n      </div>\n    </div>\n  );\n};\n\nexport default EndGame;\n","import React from \"react\";\n\nconst GameInformation = ({ category, difficulty }) => {\n  return (\n    <div className=\"game-information\">\n      <div className=\"game-information-item\">\n        <p className=\"title\">Category:</p>\n        <p className=\"category\">{category}</p>\n      </div>\n      <div className=\"game-information-item\">\n        <p className=\"title\">Difficulty:</p>\n        <p className=\"difficulty\">{difficulty}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default GameInformation;\n","import React, { useEffect, useState } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { decodeEntities } from \"../utils/stringUtils\";\nimport { shuffleAnswers } from \"../utils/arrayUtils\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { useSnackbar } from \"notistack\";\nimport Score from \"./Score\";\nimport EndGame from \"./EndGame\";\nimport GoBackHome from \"./reusables/GoBackHome\";\nimport GameInformation from \"./GameInformation\";\n\nconst PlayContainer = () => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const {\n    allQuestions,\n    category,\n    difficulty,\n    score,\n    setScore,\n    correctAnswers,\n    wrongAnswers,\n    setCorrectAnswers,\n    setWrongAnswers,\n  } = useOutletContext();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentOptions, setCurrentOptions] = useState([]);\n  const [correctAnswer, setCorrectAnswer] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [numberOfAnsweredQuestions, setNumberOfAnsweredQuestions] = useState(0);\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [endGame, setEndGame] = useState(false);\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    if (allQuestions.length > 0 && !endGame) {\n      setIsLoading(false);\n\n      const currentQuestion = allQuestions[currentQuestionIndex].question;\n\n      setNumberOfQuestions(allQuestions.length);\n      setCurrentQuestion(decodeEntities(currentQuestion));\n\n      // incorrect answers array\n      const incorrectAnswers =\n        allQuestions[currentQuestionIndex].incorrect_answers;\n      // correct answer\n      const correctAnswer = allQuestions[currentQuestionIndex].correct_answer;\n      setCorrectAnswer(correctAnswer);\n\n      //concat and shuffle answers\n      const shuffledAnswers = shuffleAnswers(correctAnswer, incorrectAnswers);\n      setCurrentOptions(\n        shuffledAnswers.map((answer) => decodeEntities(answer))\n      );\n    }\n  }, [allQuestions, currentQuestionIndex, endGame]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setShowButton(true);\n    }, 5000);\n  }, []);\n\n  const handleOptionClick = (option) => {\n    setSelectedOption(option);\n    if (option === correctAnswer) {\n      setScore(score + 1);\n      setCorrectAnswers(correctAnswers + 1);\n      setNumberOfAnsweredQuestions(numberOfAnsweredQuestions + 1);\n      enqueueSnackbar(\"Correct Answer!\", { variant: \"success\" });\n    } else {\n      setWrongAnswers(wrongAnswers + 1);\n      setNumberOfAnsweredQuestions(numberOfAnsweredQuestions + 1);\n      enqueueSnackbar(\"Wrong Answer!\", { variant: \"error\" });\n    }\n  };\n\n  const handleButtonClick = () => {\n    setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n    setCurrentQuestion(allQuestions[currentQuestionIndex].question);\n    setSelectedOption(null);\n  };\n\n  const optionItem = currentOptions.map((option, index) => {\n    const decodedOption = decodeEntities(option);\n    return (\n      <button\n        key={index}\n        data-testid=\"option\"\n        onClick={() => handleOptionClick(option)}\n        className={\n          selectedOption && selectedOption === decodedOption\n            ? \"option not-clickable\"\n            : \"option\"\n        }\n        disabled={selectedOption && selectedOption !== decodedOption}>\n        {decodedOption}\n      </button>\n    );\n  });\n\n  return isLoading ? (\n    <div data-testid=\"loaderContainer\" id=\"loader\" className=\"loader-container\">\n      <PulseLoader color=\"#ffff\" size={50} />\n      {showButton && (\n        <div data-testid=\"goBackMessage\" className=\"go-back-message\">\n          <h3>Took too long to load? :(</h3>\n          <GoBackHome />\n        </div>\n      )}\n    </div>\n  ) : endGame ? (\n    <EndGame\n      score={score}\n      correctAnswers={correctAnswers}\n      wrongAnswers={wrongAnswers}\n      numberOfQuestions={numberOfQuestions}\n    />\n  ) : (\n    <div id=\"play\">\n      <div className=\"play-section\">\n        <GameInformation category={category} difficulty={difficulty} />\n        <Score />\n        <div className=\"questions\">\n          <h2 data-testid=\"question\">{currentQuestion}</h2>\n          <p className=\"fraction\">\n            {currentQuestionIndex + 1}/{numberOfQuestions}\n          </p>\n          <div data-testid=\"options\" className=\"options\">\n            {optionItem}\n          </div>\n          <div data-testid=\"buttons\" className=\"button-container\">\n            <button\n              data-testid=\"next-button\"\n              id=\"next-button\"\n              disabled={currentQuestionIndex + 1 === numberOfQuestions}\n              onClick={() => handleButtonClick()}>\n              Next\n            </button>\n            <button\n              data-testid=\"quit-button\"\n              id=\"quit-button\"\n              onClick={() => setEndGame(true)}>\n              End Game\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayContainer;\n","import React from \"react\";\nimport GoBackHome from \"./reusables/GoBackHome\";\nimport fail from \"../assets/fail.webp\";\n\nconst ErrorContainer = () => {\n  return (\n    <div data-testid=\"errorContainer\" id=\"error\">\n      <div className=\"error-section\">\n        <p className=\"error-message\">\n          Sorry! Something is wrong! <br /> Please contact with me so that I can\n          correct it <br /> irem.peker@gmx.de\n        </p>\n        <img className=\"fail-message\" src={fail} alt=\"fail\" />\n        <GoBackHome />\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport HomeContainer from \"./components/HomeContainer\";\nimport PlayContainer from \"./components/PlayContainer\";\nimport ErrorContainer from \"./components/ErrorContainer\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst router = createBrowserRouter(\n  [\n    {\n      path: \"/\",\n      element: <App />,\n      errorElement: <ErrorContainer />,\n      children: [\n        {\n          index: true,\n          element: <HomeContainer />,\n        },\n        {\n          path: \"play\",\n          element: <PlayContainer />,\n        },\n      ],\n    },\n  ],\n  {\n    basename: \"/quiz-app\",\n    future: {\n      v7_startTransition: true,\n      v7_relativeSplatPath: true,\n      v7_fetcherPersist: true,\n      v7_normalizeFormMethod: true,\n      v7_partialHydration: true,\n      v7_skipActionErrorRevalidation: true,\n    },\n  }\n);\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}