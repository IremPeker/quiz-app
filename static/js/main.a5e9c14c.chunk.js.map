{"version":3,"sources":["assets/game.png","assets/fail.webp","components/HomeContainer.js","components/PlayContainer.js","components/ScoreContainer.js","components/UrlErrorContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","HomeContainer","props","button","this","isUrlError","className","to","id","src","game","alt","React","Component","PlayContainer","current","currentQuestion","options","currentQuestionIndex","totalNumberOfQuestions","numberOfQuestions","isPreviousDisabled","previousButtonDisabled","isNextDisabled","nextButtonDisabled","isQuizEnded","quizEnded","question","onClick","handleClick","handleButtonClick","ScoreContainer","score","correctAnswers","wrongAnswers","fetchData","UrlErrorContainer","fail","App","displayQuestions","state","allQuestions","nextQuestion","previousQuestion","Object","entries","map","el","push","correctAnswer","concatOptions","concat","allOptions","apply","shuffleOptionsArray","setState","handleButtonDisable","array","i","length","j","Math","floor","random","handleOptionClick","e","target","innerHTML","wrongAnswer","M","toast","html","classes","displayLength","prevState","numberOfAnsweredQuestions","undefined","handlePreviousButtonClick","handleNextButtonClick","handleQuitButtonClick","window","confirm","location","href","startAgain","urlError","bind","fetch","method","response","json","data","results","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,kOCsD5BC,E,kDAjDb,WAAYC,GAAQ,uCACZA,G,qDAIN,IAEIC,EAcJ,OAZEA,EAJiBC,KAAKF,MAAMG,WAK1B,kBAAC,IAAD,CAAMC,UAAU,cAAcC,GAAG,UAAjC,QAMA,kBAAC,IAAD,CAAMD,UAAU,cAAcC,GAAG,SAAjC,QAMF,yBAAKC,GAAG,QACN,6BAASF,UAAU,gBACjB,yBAAKA,UAAU,UACb,yCACA,yBAAKA,UAAU,gBACb,2EACA,0DACA,yBACEG,IAAKC,IACLJ,UAAU,kBACVK,IAAI,uBAEN,2EACA,uDAEF,yBAAKL,UAAU,yBACb,4BACE,4BAAKH,Y,GAxCOS,IAAMC,WC8EnBC,E,kDA9Eb,WAAYZ,GAAQ,uCACZA,G,qDAIN,IAAMa,EAAUX,KAAKF,MAAMc,gBACrBC,EAAUb,KAAKF,MAAMe,QACrBC,EAAuBd,KAAKF,MAAMgB,qBAClCC,EAAyBf,KAAKF,MAAMkB,kBACpCC,EAAqBjB,KAAKF,MAAMoB,uBAChCC,EAAiBnB,KAAKF,MAAMsB,mBAC5BC,EAAcrB,KAAKF,MAAMwB,UAE/B,OACE,yBAAKlB,GAAG,QACN,6BAASF,UAAU,gBAChBmB,EACC,yBAAKnB,UAAU,wBACb,4BACE,4BACE,kBAAC,IAAD,CAAMA,UAAU,kBAAkBC,GAAG,UAArC,eAON,yBAAKD,UAAU,aACb,4BAAKS,EAAQY,UACb,uBAAGrB,UAAU,YACVY,EAAuB,EAD1B,IAC8BC,GAE9B,yBAAKb,UAAU,WACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,SAASsB,QAASxB,KAAKF,MAAM2B,aACvCZ,EAAQ,IAEX,uBAAGX,UAAU,SAASsB,QAASxB,KAAKF,MAAM2B,aACvCZ,EAAQ,KAGb,yBAAKX,UAAU,iBACb,uBAAGA,UAAU,SAASsB,QAASxB,KAAKF,MAAM2B,aACvCZ,EAAQ,IAEX,uBAAGX,UAAU,SAASsB,QAASxB,KAAKF,MAAM2B,aACvCZ,EAAQ,MAIf,yBAAKX,UAAU,oBACb,4BACEE,GAAG,kBACHF,UAAWe,EAAqB,kBAAoB,GACpDO,QAASxB,KAAKF,MAAM4B,mBAHtB,YAOA,4BACEtB,GAAG,cACHF,UAAWiB,EAAiB,kBAAoB,GAChDK,QAASxB,KAAKF,MAAM4B,mBAHtB,QAOA,4BAAQtB,GAAG,cAAcoB,QAASxB,KAAKF,MAAM4B,mBAA7C,QAfF,Y,GAnDclB,IAAMC,WCqCnBkB,E,kDApCb,WAAY7B,GAAQ,uCACZA,G,qDAGE,IAAD,OACD8B,EAAQ5B,KAAKF,MAAM8B,MACnBC,EAAiB7B,KAAKF,MAAM+B,eAC5BC,EAAe,GAAKD,EAC1B,OACE,yBAAKzB,GAAG,SACN,6BAASF,UAAU,iBACjB,gDACA,6CAAmB0B,GACnB,iDAAuBC,EAAvB,yBACA,mCAASC,EAAT,oBACA,yBAAK5B,UAAU,yBACb,4BACE,4BACE,kBAAC,IAAD,CACEA,UAAU,cACVC,GAAG,IACHqB,QAAS,WACP,EAAK1B,MAAMiC,cAJf,sB,GAnBavB,IAAMC,W,iBCiBpBuB,EAhBW,WACxB,OACE,yBAAK5B,GAAG,aACJ,6BAASF,UAAU,qBACf,uBAAGA,UAAU,iBAAb,2CAAqE,6BAArE,oDAA4H,6BAA5H,sBACA,yBAAKA,UAAU,eAAeG,IAAK4B,IAAM1B,IAAI,SAC7C,yBAAKL,UAAU,yBACP,4BACI,4BAAI,kBAAC,IAAD,CAAMA,UAAU,cAAcC,GAAG,KAAjC,mB,yBCkVb+B,E,kDApVb,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IA4DRqC,iBAAmB,WACjB,IAAMvB,EAAkB,EAAKwB,MAAMC,aACjC,EAAKD,MAAMtB,sBAEPwB,EAAe,EAAKF,MAAMC,aAC9B,EAAKD,MAAMtB,qBAAuB,GAE9ByB,EAAmB,EAAKH,MAAMC,aAClC,EAAKD,MAAMtB,qBAAuB,GAGpC0B,OAAOC,QAAQ7B,GAAiB8B,KAAI,SAACC,GACrB,sBAAVA,EAAG,IACL,EAAKP,MAAMvB,QAAQ+B,KAAKD,EAAG,IAEf,mBAAVA,EAAG,KACL,EAAKP,MAAMS,cAAgBF,EAAG,OAIlC,IAAMG,EAAgB,EAAKV,MAAMvB,QAAQkC,OAAO,EAAKX,MAAMS,eACrDG,EAAa,GAAGD,OAAOE,MAAM,GAAIH,GACvC,EAAKI,oBAAoBF,GAEzB,EAAKG,SACH,CACEvC,kBACA0B,eACAC,mBACA1B,QAASmC,IAEX,WACE,EAAKI,0BA7FQ,EAsGnBF,oBAAsB,SAACG,GACrB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,OAvG1B,EA6GnBI,kBAAoB,SAACC,GACfA,EAAEC,OAAOC,YAAc,EAAK3B,MAAMS,cACpC,EAAKA,gBAEL,EAAKmB,eAjHU,EAqHnBnB,cAAgB,WACdoB,IAAEC,MAAM,CACNC,KAAM,kBACNC,QAAS,cACTC,cAAe,OAGjB,EAAKlB,UACH,SAACmB,GAAD,MAAgB,CACd1C,MAAO0C,EAAU1C,MAAQ,EACzBC,eAAgByC,EAAUzC,eAAiB,EAC3Cf,qBAAsBwD,EAAUxD,qBAAuB,EACvDyD,0BAA2BD,EAAUC,0BAA4B,EACjE1D,QAAS,OAEX,gBACkC2D,IAA5B,EAAKpC,MAAME,aACb,EAAKa,SAAS,CACZ7B,WAAW,IAGb,EAAKa,iBACH,EAAKC,MAAMC,aACX,EAAKD,MAAMxB,gBACX,EAAKwB,MAAMG,iBACX,EAAKH,MAAME,kBA9IF,EAqJnB0B,YAAc,WACZC,IAAEC,MAAM,CACNC,KAAM,gBACNC,QAAS,gBACTC,cAAe,OAGjB,EAAKlB,UACH,SAACmB,GAAD,MAAgB,CACdxC,aAAcwC,EAAUxC,aAAe,EACvChB,qBAAsBwD,EAAUxD,qBAAuB,EACvDyD,0BAA2BD,EAAUC,0BAA4B,EACjE1D,QAAS,OAEX,gBACkC2D,IAA5B,EAAKpC,MAAME,aACb,EAAKa,SAAS,CACZ7B,WAAW,IAGb,EAAKa,iBACH,EAAKC,MAAMC,aACX,EAAKD,MAAMxB,gBACX,EAAKwB,MAAMG,iBACX,EAAKH,MAAME,kBA7KF,EAoLnBmC,0BAA4B,gBACUD,IAAhC,EAAKpC,MAAMG,kBACb,EAAKY,UACH,SAACmB,GAAD,MAAgB,CACdxD,qBAAsBwD,EAAUxD,qBAAuB,EACvDD,QAAS,OAEX,WACE,EAAKsB,iBACH,EAAKC,MAAMC,aACX,EAAKD,MAAMxB,gBACX,EAAKwB,MAAMG,iBACX,EAAKH,MAAME,kBAhMF,EAuMnBoC,sBAAwB,gBACUF,IAA5B,EAAKpC,MAAME,cACb,EAAKa,UACH,SAACmB,GAAD,MAAgB,CACdxD,qBAAsBwD,EAAUxD,qBAAuB,EACvDD,QAAS,OAEX,WACE,EAAKsB,iBACH,EAAKC,MAAMC,aACX,EAAKD,MAAMxB,gBACX,EAAKwB,MAAMG,iBACX,EAAKH,MAAME,kBAnNF,EA0NnBqC,sBAAwB,WAClBC,OAAOC,QAAQ,mBACjBD,OAAOE,SAASC,KAAO,MA5NR,EAgOnBrD,kBAAoB,SAACmC,GACnB,OAAQA,EAAEC,OAAO1D,IACf,IAAK,kBACH,EAAKqE,4BACL,MAEF,IAAK,cACH,EAAKC,wBACL,MAEF,IAAK,cACH,EAAKC,0BA3OQ,EAmPnBvB,oBAAsB,gBAEcoB,IAAhC,EAAKpC,MAAMG,kBACyB,IAApC,EAAKH,MAAMtB,qBAEX,EAAKqC,SAAS,CACZjC,wBAAwB,IAG1B,EAAKiC,SAAS,CACZjC,wBAAwB,SAKEsD,IAA5B,EAAKpC,MAAME,cACX,EAAKF,MAAMtB,qBAAuB,IAAM,EAAKsB,MAAMpB,kBAEnD,EAAKmC,SAAS,CACZ/B,oBAAoB,IAGtB,EAAK+B,SAAS,CACZ/B,oBAAoB,KA1QP,EA+QnB4D,WAAa,WACX,EAAK7B,SAAS,CACZd,aAAc,GACdrB,kBAAmB,EACnBuD,0BAA2B,EAC3B3D,gBAAiB,GACjB2B,iBAAkB,GAClBD,aAAc,GACdzB,QAAS,GACTgC,cAAe,GACf/B,qBAAsB,EACtBe,eAAgB,EAChBC,aAAc,EACdF,MAAO,EACPN,WAAW,EACXJ,wBAAwB,EACxBE,oBAAoB,EACpB6D,UAAU,IAEZ,EAAKlD,aAhSL,EAAKK,MAAQ,CACXC,aAAc,GACdrB,kBAAmB,EACnBuD,0BAA2B,EAC3B3D,gBAAiB,GACjB2B,iBAAkB,GAClBD,aAAc,GACdzB,QAAS,GACTgC,cAAe,GACf/B,qBAAsB,EACtBe,eAAgB,EAChBC,aAAc,EACdF,MAAO,EACPN,WAAW,EACXJ,wBAAwB,EACxBE,oBAAoB,EACpB6D,UAAU,GAGZ,EAAKlD,UAAY,EAAKA,UAAUmD,KAAf,gBArBA,E,oLA0Bf,iF,kBAGuBC,MAHvB,iFAGkC,CAChCC,OAAQ,Q,cADJC,E,gBAGaA,EAASC,O,OAAtBC,E,OACAlD,EAAekD,EAAKC,SACpBxE,EAAoBuE,EAAKC,QAAQjC,QAEf,GAA8C,IAAzCvD,KAAKoC,MAAMmC,2BACtCvE,KAAKmD,SAAS,CACZd,eACArB,oBACAiE,UAAU,IAGZjF,KAAKmC,oBAELnB,EAAoB,GACpBhB,KAAKoC,MAAMmC,0BAA4B,EAEvCvE,KAAKgF,aAELhF,KAAKmD,SAAS,CACZ8B,UAAU,I,kDAIdjF,KAAKmD,SAAS,CACZ8B,UAAU,I,0JA2CdjF,KAAK+B,c,+BAmML,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,KACf,IACD,kBAAC,EAAD,CAAezF,WAAYD,KAAKoC,MAAM6C,YAExC,kBAAC,IAAD,CAAOS,KAAK,SACV,kBAAC,EAAD,CACErD,aAAcrC,KAAKoC,MAAMC,aACzBzB,gBAAiBZ,KAAKoC,MAAMxB,gBAC5B2B,iBAAkBvC,KAAKoC,MAAMG,iBAC7BD,aAActC,KAAKoC,MAAME,aACzBzB,QAASb,KAAKoC,MAAMvB,QACpBgC,cAAe7C,KAAKoC,MAAMS,cAC1B/B,qBAAsBd,KAAKoC,MAAMtB,qBACjCyD,0BAA2BvE,KAAKoC,MAAMmC,0BACtCvD,kBAAmBhB,KAAKoC,MAAMpB,kBAC9BS,YAAazB,KAAK4D,kBAClBlC,kBAAmB1B,KAAK0B,kBACxBR,uBAAwBlB,KAAKoC,MAAMlB,uBACnCE,mBAAoBpB,KAAKoC,MAAMhB,mBAC/BE,UAAWtB,KAAKoC,MAAMd,aAG1B,kBAAC,IAAD,CAAOoE,KAAK,UACV,kBAAC,EAAD,CACE3D,UAAW/B,KAAK+B,UAChBH,MAAO5B,KAAKoC,MAAMR,MAClBC,eAAgB7B,KAAKoC,MAAMP,eAC3BC,aAAc9B,KAAKoC,MAAMN,gBAI5B9B,KAAKoC,MAAM6C,UACV,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,UACf,IACD,kBAAC,EAAD,MAAsB,W,GA5UlBlF,IAAMC,WCGJkF,QACW,cAA7Bf,OAAOE,SAASc,UAEe,UAA7BhB,OAAOE,SAASc,UAEhBhB,OAAOE,SAASc,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a5e9c14c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/game.30eac6cc.png\";","module.exports = __webpack_public_path__ + \"static/media/fail.e3c65c50.webp\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport game from \"../assets/game.png\";\n\nclass HomeContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const isUrlError = this.props.isUrlError;\n\n    let button;\n    if (isUrlError) {\n      button = (\n        <Link className=\"play-button\" to=\"/error\">\n          Play\n        </Link>\n      );\n    } else {\n      button = (\n        <Link className=\"play-button\" to=\"/play\">\n          Play\n        </Link>\n      );\n    }\n    return (\n      <div id=\"home\">\n        <section className=\"home-section\">\n          <div className=\"how-to\">\n            <h2>Quiz Game</h2>\n            <div className=\"instructions\">\n              <p>Each game has 10 General Knowledge questions</p>\n              <p>Each question has 4 options</p>\n              <img\n                src={game}\n                className=\"game-screenshot\"\n                alt=\"example screenshot\"\n              ></img>\n              <p>Take your time! There is no time pressure :)</p>\n              <p>Press \"Play\" and Enjoy!</p>\n            </div>\n            <div className=\"play-button-container\">\n              <ul>\n                <li>{button}</li>\n              </ul>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default HomeContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass PlayContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const current = this.props.currentQuestion;\n    const options = this.props.options;\n    const currentQuestionIndex = this.props.currentQuestionIndex;\n    const totalNumberOfQuestions = this.props.numberOfQuestions;\n    const isPreviousDisabled = this.props.previousButtonDisabled;\n    const isNextDisabled = this.props.nextButtonDisabled;\n    const isQuizEnded = this.props.quizEnded;\n\n    return (\n      <div id=\"play\">\n        <section className=\"play-section\">\n          {isQuizEnded ? (\n            <div className=\"end-button-container\">\n              <ul>\n                <li>\n                  <Link className=\"end-quiz-button\" to=\"/score\">\n                    End Quiz\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          ) : (\n            <div className=\"questions\">\n              <h5>{current.question}</h5>\n              <p className=\"fraction\">\n                {currentQuestionIndex + 1}/{totalNumberOfQuestions}\n              </p>\n              <div className=\"options\">\n                <div className=\"options-left\">\n                  <p className=\"option\" onClick={this.props.handleClick}>\n                    {options[0]}\n                  </p>\n                  <p className=\"option\" onClick={this.props.handleClick}>\n                    {options[1]}\n                  </p>\n                </div>\n                <div className=\"options-right\">\n                  <p className=\"option\" onClick={this.props.handleClick}>\n                    {options[2]}\n                  </p>\n                  <p className=\"option\" onClick={this.props.handleClick}>\n                    {options[3]}\n                  </p>\n                </div>\n              </div>\n              <div className=\"button-container\">\n                <button\n                  id=\"previous-button\"\n                  className={isPreviousDisabled ? \"disabled-button\" : \"\"}\n                  onClick={this.props.handleButtonClick}\n                >\n                  Previous\n                </button>\n                <button\n                  id=\"next-button\"\n                  className={isNextDisabled ? \"disabled-button\" : \"\"}\n                  onClick={this.props.handleButtonClick}\n                >\n                  Next\n                </button>\n                <button id=\"quit-button\" onClick={this.props.handleButtonClick}>\n                  Quit\n                </button>\n                ;\n              </div>\n            </div>\n          )}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default PlayContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass ScoreContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const score = this.props.score;\n    const correctAnswers = this.props.correctAnswers;\n    const wrongAnswers = 10 - correctAnswers;\n    return (\n      <div id=\"score\">\n        <section className=\"score-section\">\n          <h3>Quiz is finished</h3>\n          <h5>Your score is {score}</h5>\n          <h5>You have answered {correctAnswers} questions correctly.</h5>\n          <h5>And {wrongAnswers} questions wrong</h5>\n          <div className=\"home-button-container\">\n            <ul>\n              <li>\n                <Link\n                  className=\"home-button\"\n                  to=\"/\"\n                  onClick={() => {\n                    this.props.fetchData();\n                  }}\n                >\n                  Home Page\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default ScoreContainer;\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport fail from \"../assets/fail.webp\";\n\nconst UrlErrorContainer = () => {\n  return (\n    <div id=\"url-error\">\n        <section className=\"url-error-section\">\n            <p className=\"error-message\">Sorry! Something is wrong with the url! <br /> Please contact with me so that I can correct it <br /> irem.peker@gmx.de</p>\n            <img className=\"fail-message\" src={fail} alt=\"fail\"></img>\n            <div className=\"home-button-container\">\n                    <ul>\n                        <li><Link className=\"home-button\" to=\"/\">Home Page</Link></li>\n                    </ul>\n                </div>\n        </section>\n    </div>\n  );\n};\n\nexport default UrlErrorContainer;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomeContainer from \"./HomeContainer\";\nimport PlayContainer from \"./PlayContainer\";\nimport ScoreContainer from \"./ScoreContainer\";\nimport UrlErrorContainer from \"./UrlErrorContainer\";\nimport \"../styles/App.scss\";\nimport M from \"materialize-css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allQuestions: [],\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      currentQuestion: [],\n      previousQuestion: [],\n      nextQuestion: [],\n      options: [],\n      correctAnswer: \"\",\n      currentQuestionIndex: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      score: 0,\n      quizEnded: false,\n      previousButtonDisabled: false,\n      nextButtonDisabled: false,\n      urlError: false,\n    };\n\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  async fetchData() {\n    let url =\n      \"https://opentdb.com/api.php?amount=10&category=9&difficulty=easy&type=multiple\";\n\n    try {\n      const response = await fetch(url, {\n        method: \"get\",\n      });\n      const data = await response.json();\n      const allQuestions = data.results;\n      const numberOfQuestions = data.results.length;\n\n      if (numberOfQuestions > 0 && this.state.numberOfAnsweredQuestions === 0) {\n        this.setState({\n          allQuestions,\n          numberOfQuestions,\n          urlError: false,\n        });\n\n        this.displayQuestions();\n      } else if (\n        numberOfQuestions > 0 &&\n        this.state.numberOfAnsweredQuestions > 0\n      ) {\n        this.startAgain();\n      } else {\n        this.setState({\n          urlError: true,\n        });\n      }\n    } catch (error) {\n      this.setState({\n        urlError: true,\n      });\n    }\n  }\n\n  displayQuestions = () => {\n    const currentQuestion = this.state.allQuestions[\n      this.state.currentQuestionIndex\n    ];\n    const nextQuestion = this.state.allQuestions[\n      this.state.currentQuestionIndex + 1\n    ];\n    const previousQuestion = this.state.allQuestions[\n      this.state.currentQuestionIndex - 1\n    ];\n\n    Object.entries(currentQuestion).map((el) => {\n      if (el[0] === \"incorrect_answers\") {\n        this.state.options.push(el[1]);\n      }\n      if (el[0] === \"correct_answer\") {\n        this.state.correctAnswer = el[1];\n      }\n    });\n\n    const concatOptions = this.state.options.concat(this.state.correctAnswer);\n    const allOptions = [].concat.apply([], concatOptions);\n    this.shuffleOptionsArray(allOptions);\n\n    this.setState(\n      {\n        currentQuestion,\n        nextQuestion,\n        previousQuestion,\n        options: allOptions,\n      },\n      () => {\n        this.handleButtonDisable();\n      }\n    );\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  shuffleOptionsArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  handleOptionClick = (e) => {\n    if (e.target.innerHTML === this.state.correctAnswer) {\n      this.correctAnswer();\n    } else {\n      this.wrongAnswer();\n    }\n  };\n\n  correctAnswer = () => {\n    M.toast({\n      html: \"Correct Answer!\",\n      classes: \"toast-valid\",\n      displayLength: 1300,\n    });\n\n    this.setState(\n      (prevState) => ({\n        score: prevState.score + 1,\n        correctAnswers: prevState.correctAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1,\n        options: [],\n      }),\n      () => {\n        if (this.state.nextQuestion === undefined) {\n          this.setState({\n            quizEnded: true,\n          });\n        } else {\n          this.displayQuestions(\n            this.state.allQuestions,\n            this.state.currentQuestion,\n            this.state.previousQuestion,\n            this.state.nextQuestion\n          );\n        }\n      }\n    );\n  };\n\n  wrongAnswer = () => {\n    M.toast({\n      html: \"Wrong Answer!\",\n      classes: \"toast-invalid\",\n      displayLength: 1300,\n    });\n\n    this.setState(\n      (prevState) => ({\n        wrongAnswers: prevState.wrongAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1,\n        options: [],\n      }),\n      () => {\n        if (this.state.nextQuestion === undefined) {\n          this.setState({\n            quizEnded: true,\n          });\n        } else {\n          this.displayQuestions(\n            this.state.allQuestions,\n            this.state.currentQuestion,\n            this.state.previousQuestion,\n            this.state.nextQuestion\n          );\n        }\n      }\n    );\n  };\n\n  handlePreviousButtonClick = () => {\n    if (this.state.previousQuestion !== undefined) {\n      this.setState(\n        (prevState) => ({\n          currentQuestionIndex: prevState.currentQuestionIndex - 1,\n          options: [],\n        }),\n        () => {\n          this.displayQuestions(\n            this.state.allQuestions,\n            this.state.currentQuestion,\n            this.state.previousQuestion,\n            this.state.nextQuestion\n          );\n        }\n      );\n    }\n  };\n\n  handleNextButtonClick = () => {\n    if (this.state.nextQuestion !== undefined) {\n      this.setState(\n        (prevState) => ({\n          currentQuestionIndex: prevState.currentQuestionIndex + 1,\n          options: [],\n        }),\n        () => {\n          this.displayQuestions(\n            this.state.allQuestions,\n            this.state.currentQuestion,\n            this.state.previousQuestion,\n            this.state.nextQuestion\n          );\n        }\n      );\n    }\n  };\n\n  handleQuitButtonClick = () => {\n    if (window.confirm(\"Are you sure?\")) {\n      window.location.href = \"/\";\n    }\n  };\n\n  handleButtonClick = (e) => {\n    switch (e.target.id) {\n      case \"previous-button\":\n        this.handlePreviousButtonClick();\n        break;\n\n      case \"next-button\":\n        this.handleNextButtonClick();\n        break;\n\n      case \"quit-button\":\n        this.handleQuitButtonClick();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  handleButtonDisable = () => {\n    if (\n      this.state.previousQuestion === undefined ||\n      this.state.currentQuestionIndex === 0\n    ) {\n      this.setState({\n        previousButtonDisabled: true,\n      });\n    } else {\n      this.setState({\n        previousButtonDisabled: false,\n      });\n    }\n\n    if (\n      this.state.nextQuestion === undefined ||\n      this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions\n    ) {\n      this.setState({\n        nextButtonDisabled: true,\n      });\n    } else {\n      this.setState({\n        nextButtonDisabled: false,\n      });\n    }\n  };\n\n  startAgain = () => {\n    this.setState({\n      allQuestions: [],\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      currentQuestion: [],\n      previousQuestion: [],\n      nextQuestion: [],\n      options: [],\n      correctAnswer: \"\",\n      currentQuestionIndex: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      score: 0,\n      quizEnded: false,\n      previousButtonDisabled: false,\n      nextButtonDisabled: false,\n      urlError: false,\n    });\n    this.fetchData();\n  };\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            {\" \"}\n            <HomeContainer isUrlError={this.state.urlError}></HomeContainer>\n          </Route>\n          <Route path=\"/play\">\n            <PlayContainer\n              allQuestions={this.state.allQuestions}\n              currentQuestion={this.state.currentQuestion}\n              previousQuestion={this.state.previousQuestion}\n              nextQuestion={this.state.nextQuestion}\n              options={this.state.options}\n              correctAnswer={this.state.correctAnswer}\n              currentQuestionIndex={this.state.currentQuestionIndex}\n              numberOfAnsweredQuestions={this.state.numberOfAnsweredQuestions}\n              numberOfQuestions={this.state.numberOfQuestions}\n              handleClick={this.handleOptionClick}\n              handleButtonClick={this.handleButtonClick}\n              previousButtonDisabled={this.state.previousButtonDisabled}\n              nextButtonDisabled={this.state.nextButtonDisabled}\n              quizEnded={this.state.quizEnded}\n            ></PlayContainer>\n          </Route>\n          <Route path=\"/score\">\n            <ScoreContainer\n              fetchData={this.fetchData}\n              score={this.state.score}\n              correctAnswers={this.state.correctAnswers}\n              wrongAnswers={this.state.wrongAnswers}\n            ></ScoreContainer>\n          </Route>\n\n          {this.state.urlError && (\n            <Route exact path=\"/error\">\n              {\" \"}\n              <UrlErrorContainer />{\" \"}\n            </Route>\n          )}\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../src/components/App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}